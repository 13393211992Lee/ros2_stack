/odom
 与里程计融合（提高定位精度）

    功能描述：将 IMU 数据与轮式里程计（/odom）融合，弥补各自缺陷：
        轮式里程计在打滑时误差累积，IMU 可提供短时高精度运动趋势
        使用扩展卡尔曼滤波（EKF）或互补滤波融合数据，输出更可靠的位姿
    学习价值：入门传感器融合算法，理解 ROS 2 中robot_localization等功能包的原理。
    实际应用：室内机器人导航（无 GPS 环境下的定位补充）。


 坐标系校准（传感器标定）

    功能描述：解决 IMU 安装误差（如传感器坐标系与机器人坐标系不重合）：
        手动校准：通过旋转机器人至特定姿态，记录 IMU 数据，计算偏移量
        自动校准：发布校准后的坐标变换（tf2），修正数据坐标系
    学习价值：掌握 ROS 2 的tf2坐标变换系统，理解传感器标定的必要性。



 数据可视化与日志记录

    功能描述：
        用rqt_plot实时可视化 IMU 的角速度、加速度曲线
        将 IMU 数据写入 CSV 文件或 ROS 2 的bag包，用于离线分析
    学习价值：掌握 ROS 2 工具链的使用，学会数据后处理方法。
    实际应用：算法调试（如分析滤波效果）、实验数据存档。


    视觉里程计（VO）
    ros-jazzy-robot-localization/now 3.8.2-1noble.20250514.215108 amd64 [已安装，本地]
    down到本地 查看源代码 如何实现多个传感器融合的  


fusion:
0. 基于卡尔曼滤波的融合框架：
    robot_localization

    robot_localization 在 ROS 生态中的地位逐渐被其他更先进的框架所取代
1. 常用优化库与 ROS2 集成
    ROS2 中常用的优化库为Ceres Solver（谷歌开源，专注非线性最小二乘）和g2o（图优化专用），二者均可直接在 C++ 节点中调用。

    Ceres Solver（非线性最小二乘）:Ceres 擅长处理带约束的非线性优化问题，通过定义残差函数（传感器观测与预测的差值）和参数块（机器人状态），自动求解最优解。
    安装：sudo apt install libceres-dev

    g2o（图优化）：g2o 专为图优化设计，将状态作为节点、约束作为边，适合 SLAM 等需要构建大规模图的场景。
    安装：sudo apt install libg2o-dev
2. ROS2 中成熟的基于优化的融合框架
    tip: 通常直接使用开源框架而非从零实现
    Cartographer ROS（激光 + 里程计融合）
        核心功能:基于图优化融合激光雷达、里程计、IMU 数据，构建全局一致的 2D/3D 地图，支持回环检测与优化。
        适用场景：室内移动机器人 SLAM（如仓储机器人）。
        安装：   sudo apt install ros-<ros2-distro>-cartographer
                sudo apt install ros-<ros2-distro>-cartographer-ros
        配置：修改cartographer_ros/configuration_files中的参数文件（如revo_lds.lua），指定传感器话题和参数。
        启动：ros2 launch cartographer_ros demo_revo_lds.launch.py

    VINS-Fusion（视觉 + IMU 融合）
        核心功能：基于非线性优化的视觉惯性 SLAM，融合单目 / 双目相机与 IMU 数据，输出高精度轨迹和地图。
        适用场景：无人机、AGV 等需要轻量化、高精度定位的场景。
        ROS2 适配：官方提供 ROS1 版本，可通过ros1_bridge与 ROS2 通信，或使用社区维护的 ROS2 移植版（如vins-fusion-ros2）。

    